local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    -- Set Center to true if you want the menu to appear in the center
    -- Set AutoShow to true if you want the menu to appear when it is created
    -- Position and Size are also valid options here
    -- but you do not need to define them unless you are changing them :)

    Title = 'Pie Solutions',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    -- Creates a new tab titled Main yadada
    Legit = Window:AddTab('Legit'), 
    ['Visuals'] = Window:AddTab("Visuals"), 
    ['Rage'] = Window:AddTab('Rage'),
    ['Miscellaneous'] = Window:AddTab('Miscellaneous'),
}


local TabBox = Tabs.Visuals:AddLeftTabbox() -- Add Tabbox on left side
local Tab1 = TabBox:AddTab('Enemy ESP')
local Tab2 = TabBox:AddTab('Advanced ESP')
-- You can now call AddToggle, etc on the tabs you added to the Tabbox

Tab1:AddToggle('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source', {
    Text = 'NameTags',
    Default = false, -- Default value (true / false)
    Tooltip = 'Displays Players NameTags', -- Information shown when you hover over the toggle
})


-- Fetching a toggle object for later use:
-- Toggles.MyToggle.Value

-- Toggles is a table added to getgenv() by the library
-- You index Toggles with the specified index, in this case it is 'MyToggle'
-- To get the state of the toggle you do toggle.Value

-- Calls the passed function when the toggle is updated
Toggles.MyToggle:OnChanged(function()
    -- here we get our toggle object & then get its value
    print('MyToggle changed to:', Toggles.MyToggle.Value)
end)

-- This should print to the console: "My toggle state changed! New value: false"
Toggles.MyToggle:SetValue(true)

Tab1:AddToggle('MyToggle', {
    Text = 'Display Distance',
    Default = false, -- Default value (true / false)
    Tooltip = 'Displays Players Distance to your current position', -- Information shown when you hover over the toggle
})

Tab1:AddToggle('MyToggle', {
    Text = 'Bounding Box + Health Bar',
    Default = false, -- Default value (true / false)
    Tooltip = 'Displays Players Health and puts a bounding box on the player', -- Information shown when you hover over the toggle
})

Tab1:AddToggle('MyToggle', {
    Text = 'Tracers',
    Default = false, -- Default value (true / false)
    Tooltip = 'Displays tracer lines originating from your viewport to the players torso', -- Information shown when you hover over the toggle
})

Tab1:AddToggle('MyToggle', {
    Text = 'Bullet Tracers',
    Default = false, -- Default value (true / false)
    Tooltip = 'Draws tracer lines from your last fired bullet', -- Information shown when you hover over the toggle
})

Tab1:AddToggle('MyToggle', {
    Text = 'Barrel Tracer',
    Default = false, -- Default value (true / false)
    Tooltip = 'Displays barrel tracer originating from the barrel..', -- Information shown when you hover over the toggle
})

Tab1:AddToggle('MyToggle', {
    Text = 'Loot ESP',
    Default = false, -- Default value (true / false)
    Tooltip = 'Shows all loot within the map', -- Information shown when you hover over the toggle
})

Tab1:AddSlider('MySlider', {
    Text = 'Loot ESP Distance',

    -- Text, Default, Min, Max, Rounding must be specified.
    -- Rounding is the number of decimal places for precision.

    -- Example:
    -- Rounding 0 - 5
    -- Rounding 1 - 5.1
    -- Rounding 2 - 5.15
    -- Rounding 3 - 5.155

    Default = 0,
    Min = 0,
    Max = 5000,
    Rounding = 1,

    Compact = false, -- If set to true, then it will hide the label
})
